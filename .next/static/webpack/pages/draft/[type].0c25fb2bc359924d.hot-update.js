"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/draft/[type]",{

/***/ "./utils/dataUtils.js":
/*!****************************!*\
  !*** ./utils/dataUtils.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchProcessedData\": function() { return /* binding */ fetchProcessedData; },\n/* harmony export */   \"saveContractData\": function() { return /* binding */ saveContractData; }\n/* harmony export */ });\nasync function fetchProcessedData(query1, query2) {\n    try {\n        const response = await fetch(\"/api/getProcessedData?query1=\".concat(query1, \"&query2=\").concat(query2), {\n            method: \"GET\"\n        });\n        if (!response.ok) throw new Error(\"Network response was not ok\");\n        const data = await response.json();\n        console.log(\"Received Data:\", data);\n        return data;\n    } catch (error) {\n        console.error(\"❌ Error fetching processed data:\", error);\n        return null;\n    }\n}\n// http-post (SAVE DATA)\nasync function saveContractData(data) {\n    console.log(\"entered saveContractData (저장하러 들어옴)\");\n    const apiUrlEndpoint = \"https://conan.ai/_functions/saveData\";\n    const body = JSON.stringify({\n        // id: data.id,\n        data: data\n    });\n    return fetch(apiUrlEndpoint, {\n        method: \"post\",\n        body\n    }).then((response)=>{\n        console.log(\"response\", response);\n        if (response.ok) {\n            setSaveToastState(true);\n            return response.json();\n        }\n        return Promise.reject(\"fetch to wix function has failed \" + response.status);\n    }).catch((e)=>{\n        console.log(\"Error :  \".concat(String(e)));\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9kYXRhVXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxlQUFlQSxtQkFBbUJDLE1BQU0sRUFBRUMsTUFBTSxFQUFFO0lBQ3hELElBQUk7UUFDSCxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sZ0NBQWlERixPQUFqQkQsUUFBTyxZQUFpQixPQUFQQyxTQUFVO1lBQ3ZGRyxRQUFRO1FBQ1Q7UUFFQSxJQUFJLENBQUNGLFNBQVNHLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sK0JBQStCO1FBQ2pFLE1BQU1DLE9BQU8sTUFBTUwsU0FBU00sSUFBSTtRQUNoQ0MsUUFBUUMsR0FBRyxDQUFDLGtCQUFrQkg7UUFDOUIsT0FBT0E7SUFDUixFQUFFLE9BQU9JLE9BQU87UUFDZkYsUUFBUUUsS0FBSyxDQUFDLG9DQUFvQ0E7UUFDbEQsT0FBTyxJQUFJO0lBQ1o7QUFDRCxDQUFDO0FBRUQsd0JBQXdCO0FBQ2pCLGVBQWVDLGlCQUFpQkwsSUFBSSxFQUFFO0lBQzVDRSxRQUFRQyxHQUFHLENBQUM7SUFDWixNQUFNRyxpQkFBa0I7SUFFeEIsTUFBTUMsT0FBT0MsS0FBS0MsU0FBUyxDQUFDO1FBQzNCLGVBQWU7UUFDZlQsTUFBTUE7SUFDUDtJQUVBLE9BQU9KLE1BQU1VLGdCQUFnQjtRQUM1QlQsUUFBUTtRQUNSVTtJQUNELEdBQ0VHLElBQUksQ0FBQ2YsQ0FBQUEsV0FBWTtRQUNqQk8sUUFBUUMsR0FBRyxDQUFDLFlBQVlSO1FBQ3hCLElBQUlBLFNBQVNHLEVBQUUsRUFBRTtZQUNoQmEsa0JBQWtCLElBQUk7WUFDdEIsT0FBT2hCLFNBQVNNLElBQUk7UUFDckIsQ0FBQztRQUNELE9BQU9XLFFBQVFDLE1BQU0sQ0FBQyxzQ0FBc0NsQixTQUFTbUIsTUFBTTtJQUM1RSxHQUNDQyxLQUFLLENBQUNDLENBQUFBLElBQUs7UUFDWGQsUUFBUUMsR0FBRyxDQUFDLFlBQXNCLE9BQVZjLE9BQU9EO0lBQ2hDO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi91dGlscy9kYXRhVXRpbHMuanM/ODlmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hQcm9jZXNzZWREYXRhKHF1ZXJ5MSwgcXVlcnkyKSB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9nZXRQcm9jZXNzZWREYXRhP3F1ZXJ5MT0ke3F1ZXJ5MX0mcXVlcnkyPSR7cXVlcnkyfWAsIHtcblx0XHRcdG1ldGhvZDogJ0dFVCcsXG5cdFx0fSk7XG5cblx0XHRpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ05ldHdvcmsgcmVzcG9uc2Ugd2FzIG5vdCBvaycpO1xuXHRcdGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cdFx0Y29uc29sZS5sb2coJ1JlY2VpdmVkIERhdGE6JywgZGF0YSk7XG5cdFx0cmV0dXJuIGRhdGE7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0Y29uc29sZS5lcnJvcign4p2MIEVycm9yIGZldGNoaW5nIHByb2Nlc3NlZCBkYXRhOicsIGVycm9yKTtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxufVxuXG4vLyBodHRwLXBvc3QgKFNBVkUgREFUQSlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzYXZlQ29udHJhY3REYXRhKGRhdGEpIHtcblx0Y29uc29sZS5sb2coJ2VudGVyZWQgc2F2ZUNvbnRyYWN0RGF0YSAo7KCA7J6l7ZWY65+sIOuTpOyWtOyYtCknKTtcblx0Y29uc3QgYXBpVXJsRW5kcG9pbnQgPSBgaHR0cHM6Ly9jb25hbi5haS9fZnVuY3Rpb25zL3NhdmVEYXRhYDtcblxuXHRjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoe1xuXHRcdC8vIGlkOiBkYXRhLmlkLFxuXHRcdGRhdGE6IGRhdGEsXG5cdH0pO1xuXG5cdHJldHVybiBmZXRjaChhcGlVcmxFbmRwb2ludCwge1xuXHRcdG1ldGhvZDogJ3Bvc3QnLFxuXHRcdGJvZHksXG5cdH0pXG5cdFx0LnRoZW4ocmVzcG9uc2UgPT4ge1xuXHRcdFx0Y29uc29sZS5sb2coJ3Jlc3BvbnNlJywgcmVzcG9uc2UpO1xuXHRcdFx0aWYgKHJlc3BvbnNlLm9rKSB7XG5cdFx0XHRcdHNldFNhdmVUb2FzdFN0YXRlKHRydWUpO1xuXHRcdFx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KCdmZXRjaCB0byB3aXggZnVuY3Rpb24gaGFzIGZhaWxlZCAnICsgcmVzcG9uc2Uuc3RhdHVzKTtcblx0XHR9KVxuXHRcdC5jYXRjaChlID0+IHtcblx0XHRcdGNvbnNvbGUubG9nKGBFcnJvciA6ICAke1N0cmluZyhlKX1gKTtcblx0XHR9KTtcbn1cbiJdLCJuYW1lcyI6WyJmZXRjaFByb2Nlc3NlZERhdGEiLCJxdWVyeTEiLCJxdWVyeTIiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwib2siLCJFcnJvciIsImRhdGEiLCJqc29uIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwic2F2ZUNvbnRyYWN0RGF0YSIsImFwaVVybEVuZHBvaW50IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aGVuIiwic2V0U2F2ZVRvYXN0U3RhdGUiLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlIiwiU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/dataUtils.js\n"));

/***/ })

});